<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_goomba</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_global</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
Michael Cantley
Last Edit: 10/13/13
*/

//whatever speed is set is what it will be going back and forth.
x_speed = 3;
//track whether player is hit or not
dead = 0;
Hit=0;
hp = global.enemyhp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
Michael Cantley
Last Edit: 10/16/13
*/

//if player is not dead
if (!dead)
{ 
    //if obj_melee has not hit obj_player or the wall keep moving back and forth
    if (!place_meeting(x + x_speed, y, obj_wall) || !place_meeting(x, y, obj_player))
    {
        x += x_speed;
        //turn around when hit wall
        if (place_meeting(x + x_speed, y, obj_wall))
        {
            //go for 'pixel perfect' movement in either direction
            while(!place_meeting(x + 1, y, obj_wall))
            {
                x += (1 * sign(x_speed));
            }
            //turn around
            x_speed = -x_speed;
        }
    }
    //when hit the player is dead and restart the game (can change later when health is added)
    /*if (place_meeting(x, y, obj_player))
    {
        dead = 1;
        with (obj_player)
        {
            instance_deactivate_object(obj_player);
            instance_position(obj_player.x,obj_player.y,obj_player)
        }
    }*/
    /*
        Add score and destroy with hp&lt;0 kept previous code incase was needed
        James
    */
    if(self.hp&lt;0)
    {
        score += 10;
        instance_destroy();
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
