<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_pencil</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_weapon_global</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
    Set Global Variables for Pencils
    James
*/

//set direction to 0 to set variable
direction = 0;
//set the alarm to have a delay in firing
obj_player.alarm[0] = global.pencilrate;

//Set mousex and mousey in create so later on it doesn't change in step
mousex = mouse_x;
mousey = mouse_y;

//Set the direction towards where the mouse is located
direction = point_direction(x,y,mousex,mousey);
//set the image angle to direction
image_angle = direction;
obj_player.PAmmoOnPlayer -= 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
    If it pencils doesnt hit a wall or a object that has obj_wall as parent keep going else destroy
    james
*/
for(i=0;i&lt;abs(self.sp);i++)//abs(self.sp) = abs(5)
{
    //If it meets a wall on x, y, or both set the speed to 5
    if(!place_meeting(x+sign(self.sp),y,obj_wall) || !place_meeting(x,y+sign(self.sp),obj_wall)|| !place_meeting(x+sign(self.sp),y+sign(self.sp),obj_wall))
    {
        self.speed=global.pencilfiresp;
    }
    //If it meets a wall on x, y, or both destroy this instance
    if(place_meeting(x+sign(self.sp),y,obj_wall) || place_meeting(x,y+sign(self.sp),obj_wall) || place_meeting(x+sign(self.sp),y+sign(self.sp),obj_wall))
    {
        instance_destroy();
    }
    //If it meets a enemy on x, y, or both destroy this instance
    if(place_meeting(x+sign(16),y,obj_goomba) || place_meeting(x,y+sign(16),obj_goomba) || place_meeting(x+sign(16),y+sign(16),obj_goomba))
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
